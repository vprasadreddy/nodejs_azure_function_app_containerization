# This is a basic workflow to help you get started with Actions

name: nodejs_azure_function_app_containerization_github_action_pipeline

env:
  # ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  # ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  # ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  # ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  FUNCTION_APP_NAME: container-func-app-2349
  FUNCTION_APP_RESOURCE_GROUP_NAME: container-function-app-rg
  AZURE_REGISTRY_SERVER_NAME: demoacr123499
  AZURE_REGISTRY_LOGIN_SERVER: demoacr123499.azurecr.io
  AZURE_REGISTRY_USERNAME: demoacr123499
  IMAGE_NAME: node-function-app
  IMAGE_TAG: 2
  # IMAGE_TAG: ${{ github.sha }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # push:
  #   branches:
  #     - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node-function-app
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: "Docker Login"
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: "Azure ACR Login"
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}
      #     username: ${{ env.AZURE_REGISTRY_USERNAME }}
      #     password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Azure ACR Login
        run: |
          az acr login --name ${{ env.AZURE_REGISTRY_SERVER_NAME}}

      # - name: Build Docker image
      #   run: docker build -t prasadreddy2349/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} .

      - name: Build & Push Docker image
        run: |
          docker build -t ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} .
          docker push ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./node-function-app
      #     push: true
      #     tags: ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}

      - name: "Run Azure Functions Container Action"
        uses: Azure/functions-container-action@v1
        id: fa
        with:
          app-name: ${{ env.FUNCTION_APP_NAME}}
          image: ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}

      - name: Delete docker image
        run: docker rmi ${{ env.AZURE_REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
